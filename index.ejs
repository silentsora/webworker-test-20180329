<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <!--[if IE]>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <![endif]-->
    <title>xxx</title>
    <meta id="share-name" itemprop="name" content="">
    <meta id="share-description" itemprop="description" content="">
    <meta id="share-image" itemprop="image" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="format-detection" content="telephone=no" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <link rel="icon" href="http://7xvsf2.com1.z0.glb.clouddn.com/favicon.ico">


    <% if (process.env.NODE_ENV === 'handover') { %>
        <% for (var css in htmlWebpackPlugin.files.css) { %>
            <% var cssFile = htmlWebpackPlugin.files.css[css] %>
            <link href="<%= cssFile %>" rel="stylesheet">
        <% } %>
    <% } else { %>
        <% for (var css in htmlWebpackPlugin.files.css) { %>
            <% var cssFile = htmlWebpackPlugin.files.css[css].substr(htmlWebpackPlugin.files.publicPath.length); %>
            <link href="<%= cssFile %>" rel="stylesheet">
        <% } %>
    <% } %>
    <!-- rem布局初始化设置start -->
    <script type="text/javascript">
        <%= require('raw-loader!./src/js/app/rem.js') %>
    </script>
    <!-- rem布局初始化设置end -->

    <!-- <script type="text/javascript">var cnzz_protocol = (("https:" == document.location.protocol) ? " https://" : " http://");document.write(unescape("%3Cspan id='cnzz_stat_icon_1271358215'%3E%3C/span%3E%3Cscript src='" + cnzz_protocol + "s22.cnzz.com/z_stat.php%3Fid%3D1271358215' type='text/javascript'%3E%3C/script%3E"));</script> -->
</head>
<body>
    <div class="m-main-wrap absf">
        <canvas id="canvas1" width="800" height="600"></canvas>
    </div>
    <script src="//cdnjs.gtimg.com/cdnjs/libs/zepto/1.0rc1/zepto.min.js"></script>

    <!-- <script type="text/js-worker" id="workerImg">
        var compareImg = (x0, y0, img2Width, img2Height, img1Width, grey1, grey2) => {
            let sum = 0;

            for (var x = x0; x < img2Width + x0; x++) {
                for (var y = y0; y < img2Height + y0; y++) {
                    sum += Math.abs(grey1[x + y * img1Width] - grey2[(x - x0) + (y - y0) * img2Width]);
                }
            }

            return parseFloat((sum / (img2Width * img2Height)).toFixed(2));
        };

        onmessage = (e) => {
            let avg = compareImg(e.data[0], e.data[1], e.data[2], e.data[3], e.data[4], e.data[5], e.data[6]);
            postMessage(avg);
            close();
        };
    </script> -->

    <script type="text/js-worker" id="workerImg">
        const compareImg = (x0, y0, img1Width, img2Width, img2Height, grey1, grey2) => {
            let sum = 0;

            for (let x = x0; x < img2Width + x0; x++) {
                for (let y = y0; y < img2Height + y0; y++) {
                    sum += Math.abs(grey1[x + y * img1Width] - grey2[(x - x0) + (y - y0) * img2Width]);
                }
            }

            return parseFloat((sum / (img2Width * img2Height)).toFixed(2));
        };

        onmessage = (e) => {
            let sumList = [];
            let i = 0;

            let xStart = e.data[0];
            let yStart = e.data[1];
            let xEnd = e.data[2];
            let yEnd = e.data[3];

            let img1Width = e.data[4];
            let img2Width = e.data[5];
            let img2Height = e.data[6];

            let grey1 = e.data[7];
            let grey2 = e.data[8];

            for (let x0 = xStart; x0 <= xEnd; x0++) {
                for (let y0 = yStart; y0 <= yEnd; y0++) {
                    sumList[i] = compareImg(x0, y0, img1Width, img2Width, img2Height, grey1, grey2);
                    i++;
                }
            }

            postMessage(sumList);
        };
    </script>
    
    <% if (process.env.NODE_ENV === 'handover') { %>
        <% for (var chunk in htmlWebpackPlugin.files.chunks) { %>
            <% var jsFile = htmlWebpackPlugin.files.chunks[chunk].entry; %>
            <script type="text/javascript" src="<%= jsFile %>"></script>
        <% } %>
    <% } else { %>
        <% for (var chunk in htmlWebpackPlugin.files.chunks) { %>
            <% var jsFile = htmlWebpackPlugin.files.chunks[chunk].entry.substr(htmlWebpackPlugin.files.publicPath.length); %>
            <script type="text/javascript" src="<%= jsFile %>"></script>
        <% } %>
    <% } %>

    </body>
</html>
